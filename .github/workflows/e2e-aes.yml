name: AES End-to-End Tests

on:
  schedule:
    - cron: "0 9 * * 1"
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "benchmarks/aes/**"
      - "utils/**"
      - "tools/**"
      - "runner/**"

  pull_request:
    branches: [main]
    paths:
      - "benchmarks/aes/**"
      - "utils/**"
      - "tools/**"
      - "runner/**"

env:
  GOOS: linux
  GO111MODULE: on
  PORT: 50051

jobs:
  build-and-push:
    name: Build and push all images
    runs-on: ubuntu-20.04
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Python version
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Set up python dependencies
        working-directory: benchmarks/aes/python
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel ez_setup setuptools
          GRPC_PYTHON_BUILD_SYSTEM_ZLIB=true
          python3 -m pip install -r requirements.txt

      - name: Build and push
        working-directory: benchmarks/aes
        env:
          GOPRIVATE_KEY: ${{ secrets.EASE_LAB_ACCESS_KEY }}
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.26
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.1
          make all
          make push


  test-compose:
    name: Test Docker Compose
    needs: build-and-push
    env:
      YAML_DIR: benchmarks/aes/yamls/docker-compose/
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            aes-go,
            aes-python,
            aes-nodejs,
            aes-go-tracing,
            aes-python-tracing,
            aes-nodejs-tracing,
          ]

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
        with:
          lfs: "true"

      - name: start docker-compose benchmark
        run: |
          docker-compose -f ${{ env.YAML_DIR }}/dc-${{ matrix.service }}.yaml pull
          docker-compose -f ${{ env.YAML_DIR }}/dc-${{ matrix.service }}.yaml up &> log_file &
          sleep 60s
          cat log_file

      - name: invoke the chain
        run: |
          ./tools/bin/grpcurl -plaintext localhost:50000 helloworld.Greeter.SayHello

      - name: show docker-compose log
        run: cat log_file

  test-knative:
    name: Test Knative Deployment
    needs: build-and-push
    # env:
    #   GOCACHE: /root/tmp/gocache
    #   GOPATH: /root/tmp/gopath
    env:
      KIND_VERSION: v0.14.0
      K8S_VERSION: v1.22.10

    runs-on: [ubuntu-20.04]
    strategy:
      fail-fast: false
      matrix:
        service:
          [
            aes-go,
            aes-python,
            aes-nodejs,
            aes-go-tracing,
            aes-python-tracing,
            aes-nodejs-tracing,
          ]
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: "true"
      - name: Checkout LFS objects
        run: git lfs checkout

      - uses: actions/setup-go@v3
        with:
          go-version: 1.18

      # - name: Create k8s Kind Cluster
      #   uses: helm/kind-action@v1.3.0
      #   with:
      #     version: ${{ env.KIND_VERSION }}
      #     kubectl_version: ${{ env.K8S_VERSION }}


      - name: Install Kind
        run: bash ./runner/scripts/01-kind.sh

      - name: Install Serving
        run: bash ./runner/scripts/02-serving.sh

      - name: Install Kourier
        run: bash ./runner/scripts/02-kourier.sh

      - name: Setup domain
        run: |
          INGRESS_HOST="127.0.0.1"
          KNATIVE_DOMAIN=$INGRESS_HOST.nip.io
          kubectl patch configmap -n knative-serving config-domain -p "{\"data\": {\"$KNATIVE_DOMAIN\": \"\"}}"


      # - name: Kubernetes KinD Cluster
      #   uses: container-tools/kind-action@v1
      #   with:
      #     version: v0.14.0
      #     kubectl_version: v1.22.10
      #     knative_serving: v1.2.2
      #     knative_kourier: v1.2.0
      #     # knative_eventing: v1.0.0


      ## Test the service
      - name: Deploy knative
        working-directory: benchmarks
        run: kubectl apply -f ./aes/yamls/knative/${{ matrix.file }}

      - name: Test invoking once
        working-directory: tools/test-client
        run: |
          set -x
          go build ./test-client.go

          # NODEPORT=$(kubectl get svc kourier-ingress -n kourier-system -o=jsonpath='{.spec.ports[0].nodePort}')
          kubectl get service

          url_list=$(kubectl get kservice | awk '$2 ~ /http/ {sub(/http\:\/\//,""); print $2}')
          for url in $url_list
          do
            ./test-client --addr $url:80 --name "Example text for AES CI"
          done

      - name: Print logs
        if: ${{ always() }}
        run: |
          set -x
          container_list=$(kubectl get pods -n default -o jsonpath="{.items[*].spec.containers[*].name}")
          for container_name in $container_list
          do
            kubectl logs -n default -c $container_name -l serving.knative.dev/service=${{ matrix.service }}
          done

      - name: Down
        if: ${{ always() }}
        run: |
          kubectl delete -f ${{ env.YAML_DIR }}/kn-${{ matrix.service }}.yaml --namespace default --wait
